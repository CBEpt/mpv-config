##⇘⇘基本说明：
## 行首存在注释符"#"，代表此项处于不启用状态（即恢复MPV的默认设置状态），删去即启用
## 部分启用的参数没有"="，则该项实际为"yes"。例如deband默认关闭： --deband 实际等效 --deband=yes；类推 --deband=no 等效注释掉该参数
## 注释内容解释 —— # <可选值> [条件要求] 参数意义说明 （补充）

########
# 基础 #
########

# 解码
vo=gpu                                # 指定要使用的视频输出后端，当前版本默认值即gpu，许多渲染选项也只能在gpu/libmpv下正常工作
gpu-api=d3d11                         ### <opengl/vulkan/d3d11> [SVP补帧时推荐设置为d3d11] 选择图形绘制接口。非特殊情况下windows用户始终应首选d3d11 （mpv对于windows的默认，显卡注意开自适应电源模式）
                                      ## opengl是最不推荐选择，vulkan的10bit尚未完全实现 https://github.com/mpv-player/mpv/issues/8554
                                      ## 通过d3d11-adapter可以设定mpv使用哪块显卡。详见文档：https://mpv.io/manual/master/#options-d3d11-adapt
                                      ### gpu-api的选择？
                                      ## macOS：只有opengl可选
                                      ## Linux： vulkan或者opengl，推荐vulkan
                                      ## Windows：vulkan、d3d11及opengl都可选。三者理论上vulkan性能最好，但依然推荐d3d11
                                      ## 通过d3d11 api，目前mpv已支持windows的10 bit输出和HDR colorspace的设定
                                      ## HDR metadata pass on正在跟进，独占全屏正在跟进
#gpu-context=auto                     # 选择输出后端。此项通常由 --gpu-api=<value> 自动决定正确值；--gpu-api=opengl 时默认选用 angle ，此时最好改为 win/dxinterop
#fbo-format=auto                      # 内处理精度。此项通常由 --gpu-api=<value> 自动决定正确值，默认首选16位及以上的精度
#d3d11-exclusive-fs=yes               # --gpu-api=d3d11 下的全屏独占
#d3d11-flip=no                        # [通常发生在 --d3d11-exclusive-fs=yes 和 --on-top 一起使用时] 可用于避免MPV全屏时的冻屏问题
                                      # 如果存在上述问题则启用该参数，否则不应该使用，因为d3d11下的翻转模型性能最好
                                      # [当 --gpu-context=angle 也存在全屏冻屏问题时] 用参数 --angle-flip=no 代替 d3d11-flip=no
#d3d11va-zero-copy=yes                # [当 gpu-api=d3d11 时] 默认情况下，当使用带有--gpu-api=d3d11 的硬件解码时，视频图像将从解码器表面复制（GPU 到 GPU）到着色器资源。
                                      # 设置此选项可通过直接从解码器图像采样来避免复制。这可能会提高性能并降低功耗，但可能会由于填充而导致图像在底部和右侧边缘采样不正确，并可能引发驱动程序错误，因为 Direct3D 11 从技术上不允许从解码器表面采样（尽管大多数驱动程序支持。）               
                                      # 当解码卡顿掉帧时可启用此项尝试改善
hwdec=no                              # 指定应使用的硬件视频解码API，软解改为no，硬解建议使用auto-copy或d3d11va-copy。10系以上N卡建议使用nvdec-copy,帕斯卡/图灵架构N卡可以使用nvdec-copy，后者可硬解yuv444
                                      # --hwdec=auto 等效 --hwdec=yes。当 --gpu-api=d3d11 时，值 auto 首选 d3d11va ；值 auto-copy 首选 dxva2-copy
                                      # 不推荐选用理论上解码效率最高的 无-copy硬解 ，因为要确保尽可能多的其它设置/滤镜/着色器正常作用（有些不支持native模式）
                                      # 在核显&NVDIA_MX_x50这种组合（独显无解码单元）或者在较老的机器上 dxva2-copy 的占用可能远低于 d3d11va-copy
                                      ## 硬解模式目前存在各种已知问题，在cuda-copy下大多可以得到解决，推荐优先使用软解或cuda-copy硬解模式
#hwdec-codecs=all                     # 在选定范围内的编码格式尝试硬解，当前版本默认值为 --hwdec-codecs=h264,vc1,hevc,vp8,vp9,av1
#vd-lavc-dr=yes                       # [当 gpu-api=d3d11 时] 启用直接渲染（默认：yes）。如果设置为yes，视频将直接解码到 GPU 视频内存（或暂存缓冲区）
#vd-lavc-threads=8                    # 用于解码的线程数。是否实际支持线程取决于编解码器（默认值：0）。0 表示自动检测机器上的内核数并使用它，最多为 16。您可以手动设置超过 16 个线程
#opengl-pbo=yes                       # 启用 PBO。在某些驱动程序上，这可能会更快，特别是如果源视频大小很大（例如所谓的“4K”视频）。在其他驱动程序上，它可能会更慢或导致延迟问题
##⇘⇘双显卡笔记本的处理
#vd=h264_qsv,hevc_qsv,mpeg2_qsv,vp9_qsv,vp8_qsv,av1_qsv
                                      # 在Intel核显&NVDIA_MX_x50这种配置组合的条件下，如果使用独显渲染，因为MX系列独显没有解码单元，即使使用hwdec指定硬解实际依然只能软解
                                      # 使用此参数可使用核显硬解、辅助渲染的同时让独显主力渲染（当 hwdec=no 时快进可能造成MPV假死，建议使用 xxxx-copy 的解码方式）
#d3d11-adapter="NVIDIA GeForce RTX 2070 Super"
                                      # [当 gpu-api=d3d11 时] 指定某张显卡作为主渲染输出，默认情况下自动选择系统指定的主渲染显卡
                                      # 显卡名可查看任务管理器自行更改适配。该参数等效在驱动面板中设置以独显运行mpv
                                      # 例如使用I+N的双显笔记本的内屏时，实际使用的是"Intel(R) UHD Graphics"，修改该项示例指定独显可大幅降低任务管理器中双显卡的3d渲染占比
                                      # 大多数双显卡笔记本在外接显示器时，表现类似“独显直连”，此时无需该参数也会自动用独显输出
                                      # [当 gpu-api=vulkan 时] 用参数 --vulkan-device 代替 --d3d11-adapter

########
# 功能 #
########

osc=no                                # [缩略图引擎的前置条件] 禁用原OSC（即内置的"osc.lua"脚本）以兼容第三方的界面样式
#fs                                   # fs=fullscreen 打开即全屏幕
no-border                             # 默认为系统原生窗口界面，启用此项使用无边框界面（去除WINDOWS的窗口装饰）
#window-maximized=yes                 # 运行MPV自动窗口最大化（无边框界面时的最大化类似“无边窗口模式”而非“全屏”）
#background="#778899"                 # <格式为(AA)RRGGBB> 更改MPV初启动与播放无视频轨文件时的背景颜色
hidpi-window-scale=no                 # [推荐设置为no] 是否执行HIDPI缩放，默认yes。MPV支持HIDPI没有实际意义，因为本身不是GUI程序
                                      # 默认值情况下初始化的视频窗口随DPI改变大小，例如在缩放200%的4k的显示器打开800p视频后自动执行2倍缩放变1600p。此外还会影响其它脚本部分内容
#autofit=50%                          # <整数> 初始窗口高度（百分比），默认：60
autofit-larger=80%x80%                # 窗口模式下最大占屏幕的百分比（例如在FHD屏上打开4k视频初始窗口过大）
autofit-smaller=50%x50%               # 窗口模式下最小占屏幕的百分比（例如在4k屏上打开480p视频初始窗口过小）
#keepaspect=no                        # 默认yes，默认情况下MPV只按源比例拉伸视频。启用此项将始终变形画面至窗口大小
#keepaspect-window=no                 # 默认yes，默认情况下MPV的窗口比例锁定为视频比例。启用此项以实现窗口自由拉伸行为（当 keepaspect=yes 时四周填充黑边）
#panscan=1.0                          # <0.0-1.0> 裁切横向画面以充满窗口（建议配合 keepaspect-window=no 使用）
pause                                 # 以暂停状态启动播放器
#loop=inf                             # <N|inf|no> 始终循环播放当前文件
#loop-playlist=no                     # <N|inf|force|no> 播放列表循环
keep-open=yes                         # <yes|默认no|always> 播放列表播放完毕是否退出，always：文件结束自动暂停，不播放下一文件
keep-open-pause=yes                   # <默认yes|no> 播放列表播放播放完毕是否暂停
                                      ## --keep-open=yes、--keep-open-pause=yes 参数为 exit-fullscreen.lua 脚本生效前置条件
#untimed                              # 输出视频帧时请勿入睡。（开启后无法正确显示补帧数值）
log-file="~~/mpv.log"                 # 记录log
ontop                                 # 窗口置顶（当 --gpu-api=vulkan 时也有全屏独占作用）
#ontop-level=system                   # <默认window|system|level>
hr-seek=yes                           # <no|absolute默认值|default|yes|always> 选择何时使用不限于关键帧的精确跳转。此类跳转需要将视频从前一个关键帧解码到目标位置，因此可能需要一些时间，具体取决于解码性能
                                      # no：禁用；absolute：只对章节使用精确跳转；default：类似absolute，但在纯音频的情况下启用精准跳转。可能随版本更新发生行为变化；yes：尽可能使用精确跳转；always：与yes相同（为了兼容性）
hr-seek-framedrop=no                  # 跳转时丢帧，关闭利于修正音频延迟    # SVP补帧时推荐设置为no
save-position-on-quit=yes             # 退出时记住播放状态。缓存目录默认在设置文件夹中的 "watch_later"
                                      # 退出时也可按快捷键 Q 保存进度
write-filename-in-watch-later-config  # 将文件名写入播放记录缓存文件
resume-playback-check-mtime=yes       # 如果文件的修改时间与保存时相同，则仅从 watch_later配置子目录（通常为~/.config/mpv/watch_later/）恢复播放位置。这可以防止在具有不同内容的同名文件中向前跳过。（默认：no）
watch-later-options=volume,vid,aid,sid
                                      # [SVP补帧时推荐设置为留空] 稍后观看的白名单（留空等效 start ，只保存播放位置）
                                      # 当 --save-position-on-quit=yes 或使用退出时保存到稍后观看的快捷键时，如果不使用白名单，滤镜列表、音量、速率等多个状态也会被保存并在下次启动时恢复
                                      # 具体参数值：speed,edition,pause,volume,mute,audio-delay,fullscreen,ontop,border,gamma,brightness,contrast,saturation,hue,deinterlace,vf,af,panscan,aid,vid,sid,sub-delay,sub-speed,sub-pos,sub-visibility,sub-scale,sub-use-margins,sub-ass-force-margins,sub-ass-vsfilter-aspect-compat,sub-ass-override,ab-loop-a,ab-loop-b,video-aspect-override
#watch-later-options-clr              # 恢复播放记录时禁止恢复播放过程中所有更改过的设置，这可以解决部分已知问题
#watch-later-options-remove=contrast  # 禁止部分参数恢复的话可使用该项来设置
                                      # 该项指定参数时目前必须单独列出，暂无法像--watch-later-options=option1,option2,...来指定，建议使用watch-later-options白名单来设置
reset-on-next-file=border,contrast,brightness,gamma,saturation,hue,video-zoom,video-rotate,video-pan-x,video-pan-y,panscan,speed,audio,sub,audio-delay,sub-pos,sub-scale,sub-delay,sub-speed,sub-visibility,vf,af
                                      # 重设在播放过程中更改的部分相关设置（色彩、画面、音轨、字幕和滤镜相关)
#input-ipc-server=\\.\pipe\mpvsocket  # input-ipc-server=<ipc_path> 开启Ipc功能，Linux/MacOS: input-ipc-server=/tmp/mpvsocket
                                      # 使用SVP manager时此项需设置为mpvpipe值
#demuxer-max-bytes=500MiB             # 播放网络视频时的目标缓存大小（KiB或MiB）
#demuxer-readahead-secs=20            # 限制网络视频的最大缓存时间（秒数）
ordered-chapters                      # 有序章节列表支持，默认启用，如需禁用可使用no-ordered-chapters
                                      # 该项是对mkv的chapter-links特性的支持，禁用的话mpv不会加载或搜索其他文件的视频片段，并且也会忽略主文件指定的任何章节顺序

#######
# OSD #
#######

##⇘⇘OSD 即 On-Screen-Display ，通常为屏幕上弹出显示的信息。 OSC 即 on-screen-controller ，MPV中指的是简易操控界面
no-osd-bar
osd-on-seek=msg-bar                   # <no,bar,msg,msg-bar> 在跳转时间轴时显示的信息类型
osd-bar-w=100
osd-bar-h=2
osd-bar-align-y=-1
#osd-blur=0
#osd-color="#B300FFFF"
#osd-border-color="#B3008B8B"
osd-border-size=1.5
osd-font="NotoSansHans-Regular"       # 指定OSD字体
osd-font-size=24                      # 更改OSD字体大小（全局，影响多个功能显示的文本）（默认值：55）
osd-playing-msg="${filename}"         # 开始播放时短暂显示的信息：文件名
osd-fractions=yes                     # 以秒为单位显示OSD时间（毫秒精度），有助于查看视频帧的确切时间戳
osd-duration=2000                     # 设置OSD信息的持续时间（毫秒）（默认值：1000）

########
# 视频 #
########

### 视频相关设置使用配置组进行设定，以下仅为参数示例说明，具体设置见下方 [通用参数补充区] 和 [配置组] 的相关配置组参数

##⇘⇘以下为ICC色彩管理相关参数设置
#icc-profile="~~/icc/ITU-RBT709ReferenceDisplay.icc" 
                                      # 加载 ICC 配置文件并使用它来将视频 RGB 转换为屏幕输出，自行选择显示器对应色域的icc配置文件。此选项覆盖 --target-prim、--target-trc和--icc-profile-auto 选项
#icc-profile-auto                     # 如果做过专业校色可开启（系统目录存在对应的icm校色文档）。未做校色的广色域屏应手动指定target-prim=<value>
                                      # 启用色彩管理可以让标准色彩空间的视频在广色域显示器上显示相对正确的色彩，关闭会恢复过饱和的状态
                                      # 目前mpv在使用icc色彩管理时由于校色曲线目标是BT.1886，会造成大部分显示屏出现偏色和画面偏暗等问题 https://github.com/mpv-player/mpv/issues/8009
                                      ## 启用参数--icc-force-contrast=1000，可解决某些校色文件对比度极高导致画面偏暗的问题（oled屏此项自行测试合理值）。注意仍无法解决hdr映射画面偏暗的问题
                                      # 亦或使用--target-prim=<value> 参数管理色彩空间
#icc-intent=0                         # ICC的色彩转换映射意图，0：感知，1：相对色度（默认值），2：饱和，3：绝对色度。推荐使用感知度映射  https://github.com/mpv-player/mpv/issues/8009#issuecomment-923607273
#icc-force-contrast=1000              # <no|0-1000000|inf> 色彩管理。覆盖ICC文件内的静态对比度数据，默认no为不覆盖，oled可以设置为inf即无限（如果ICC中此项数据丢失则自动回落到1000），设置为1000可解决某些校色文件对比度极高导致黑色部分太黑，此项只影响BT.1886的内容显示
#icc-3dlut-size=64x64x64              # 从每个维度的ICC配置文件生成的3D LUT的大小。默认值为64x64x64。范围<2--512>
#icc-cache-dir="~~/icc_cache"         # 指定目录存储和加载从ICC配置文件创建的3D LUT。这可以用来加快加载速度。请注意，这些文件包含未压缩的LUT。它们的大小取决于--icc-3dlut-size，并且可能非常大。注意：这不会自动清除，因此旧的，未使用的缓存文件可能会无限期地停留
                                      ## 缓存生成的3dlut本应起到加速作用，但是硬盘IO性能不足可能产生反作用，根据实际情况选择禁不禁用

##⇘⇘以下为target色彩管理相关参数设置
#target-prim=auto                     # 广色域屏应该设定此参数为具体值以解决色彩过饱和的问题，当不使用ICC色彩管理时，视频颜色将适应此色彩空间。srgb屏无需更改此默认值，其他举例：99%的argb屏幕写adobe。90%+的p3色域屏写dci-p3
                                      # 使用--target-prim=<value> 参数管理色彩空间时会导致hdr下出现偏色问题，hdr映射时启用--gamut-clipping=no 参数可解决该问题  https://github.com/mpv-player/mpv/issues/9071
#target-trc=auto                      # 指定显示屏的传输特性（伽马），未使用icc色彩管理时生效。默认值auto：hdr下使用gamma2.2，sdr下不做处理
#target-peak=auto                     # <auto|nits> 指定输出显示器的测量峰值亮度。受--target-trc参数影响，默认值auto：根据trc参数使用适当值，sdr默认为203，hdr下建议根据实际显示效果指定具体nits值
                                      # 当使用icc色彩管理时，若nits设置为高于默认值（203），显示器将被mpv视为hdr处理
#gamut-clipping=no                    # 通过降低色域外颜色的饱和度，进行色度裁剪。此处关闭以避免色度偏移（icc色彩管理下该参数无效） https://github.com/mpv-player/mpv/issues/9071

##⇘⇘以下为调整画面效果的相关参数设置
#video-sync=display-resample          # 类"ReClock"作用，更改为与视频帧与显示器刷新率同步，自动调节音频速度补偿偏移。 # SVP补帧时推荐关闭
                                      # 默认值audio（与音频/系统时钟同步）通常兼容性最好但有偶尔的丢帧和重复
#video-sync-max-video-change=5        # [仅当 --video-sync=display-xxxx 时生效] 
#interpolation                        # [仅当 --video-sync=display-xxxx 时生效] 减少由于视频fps和显示刷新率不匹配而引起的卡顿（也称为抖动）。 # SVP补帧时推荐关闭
                                      # interpolation使用的算法。详见https://mpv.io/manual/master/#options-tscale
                                      # 一些讨论见 https://github.com/mpv-player/mpv/issues/2685
#tscale=oversample                    # [仅开启 --interpolation 时生效] 时间插值算法（非MEMC运动补偿）。 # SVP补帧时推荐关闭
                                      # 目前的默认为mitchell。总体而言mitchell更平滑（当然不好和SVP插帧比），但会有模糊。oversample没有模糊，但不平滑（基本还原24帧的样子，效果类似MADVR的smoothmotion），triangle介于两者之间，catmull_rom相对锐利
                                      # 具体选择哪个请依据自身需求来
#tcale-radius=1.0                     # 设置可调过滤器的半径，必须是介于 0.5 和 16.0 之间的浮点数。如果未指定，则默认为过滤器的首选半径。不适用于每个缩放器和 VO 组合
#tcale-antiring=1.0                   # 设置抗振铃强度。这试图消除振铃，但会在此过程中引入其他伪影。必须是介于 0.0 和 1.0 之间的浮点数。默认值 0.0 完全禁用抗振铃    
                                      # 请注意，这不会影响特殊过滤器bilinear和 bicubic_fast，也不会影响任何极坐标 (EWA) 缩放器                              
#dither-depth=auto                    # <N|no|auto> 是否开启色深抖动弥补色彩转换损失。8位显示器写8，10位显示器写10，auto的值取决于 --gpu-api 不一定正确，见问题状态：https://github.com/mpv-player/mpv/issues/8554
                                      # 如果8抖10的显示器使用10存在输出异常的情况，改回值8
#dither=ordered                       # <fruit|ordered|error-diffusion|no>  当启用--dither-depth 时生效，选择抖动算法
                                      # error-diffusion算法效果最好也最耗能，当效能不足时将自动回落到fruit算法
                                      # ordered算法效果接近error-diffusion，耗能和fruit类似，推荐优先使用该算法
#dither-size-fruit=6                  # 当--dither=fruit时生效  
#error-diffusion=sierra-lite          # <simple|默认sierra-lite|floyd-steinberg|atkinson> 当--dither=error-diffusion时生效，error-diffusion使用的算法内核
#temporal-dither                      # 当启用--dither-depth 时生效，使用时间抖动算法
#temporal-dither-period=1             # <1-128> 当启用--temporal-dither 时生效，确定抖动模式在使用时更新的频率。1（默认值）将在每个视频帧上更新

#scale=ewa_hanning                    # 放大算法，profile=gpu-hq的默认为spline36,推荐算法为--ewa_lanczos和--ewa_lanczossharp，即jinc算法及其变体
                                      # ewa_hanning算法相比jinc算法可减少振铃的产生
                                      # 内置scale算法中spline36算法更适合实拍类图像，ewa类算法更适合anime类图像
#scale-radius=3.2383154841662362      # 设置可调过滤器的半径，必须是介于 0.5 和 16.0 之间的浮点数。如果未指定，则默认为过滤器的首选半径。不适用于每个缩放器和 VO 组合
#scale-antiring=1.0                   # 设置抗振铃强度。这试图消除振铃，但会在此过程中引入其他伪影。必须是介于 0.0 和 1.0 之间的浮点数。默认值 0.0 完全禁用抗振铃
                                      # 请注意，这不会影响特殊过滤器bilinear和 bicubic_fast，也不会影响任何极坐标 (EWA) 缩放器
                                      ## 使用外部upscale类着色器时基本无需启用此项
#cscale=ewa_hanning                   # 色度还原算法；启用 "KrigBilateral.glsl" 着色器时将覆盖此参数。默认 bilinear 
                                      # 内置cscale算法中推荐使用 spline36 或 ewa_hanning
#cscale-radius=3                      # 设置可调过滤器的半径，必须是介于 0.5 和 16.0 之间的浮点数。如果未指定，则默认为过滤器的首选半径。不适用于每个缩放器和 VO 组合
#cscale-antiring=1.0                  # 设置抗振铃强度。这试图消除振铃，但会在此过程中引入其他伪影。必须是介于 0.0 和 1.0 之间的浮点数。默认值 0.0 完全禁用抗振铃
                                      # 请注意，这不会影响特殊过滤器bilinear和 bicubic_fast，也不会影响任何极坐标 (EWA) 缩放器
                                      ## 使用外部cscale类着色器时基本无需启用此项
#dscale=mitchell                      # [使用"SSimDownscaler.glsl"时须锁mitchell] 缩小算法。若不设定，则自动采用 --scale=<value> 的值
                                      # 当只使用内置dscale算法时推荐bicubic（效果最好）或ewa_hanning，也可自行测试robidouxsharp和ewa_robidouxsharp及其他算法效果
#dscale-radius=1                      # 设置可调过滤器的半径，必须是介于 0.5 和 16.0 之间的浮点数。如果未指定，则默认为过滤器的首选半径。不适用于每个缩放器和 VO 组合
#dcale-antiring=1.0                   # 设置抗振铃强度。这试图消除振铃，但会在此过程中引入其他伪影。必须是介于 0.0 和 1.0 之间的浮点数。默认值 0.0 完全禁用抗振铃
                                      # 请注意，这不会影响特殊过滤器bilinear和 bicubic_fast，也不会影响任何极坐标 (EWA) 缩放器
                                      ## 使用外部dcale类着色器时基本无需启用此项
#linear-upscaling=no                  # [须 --fbo-format 指定16位及以上的精度；与 --sigmoid-upscaling 不兼容] （对HDR内容无影响）
#sigmoid-upscaling=no                 # [与 --linear-upscaling 不兼容] 放大时非线性的颜色转换，可避免强振铃伪影
                                      ## 开发者建议要么优先使用 --sigmoid-upscaling ，要么以上两项干脆都不用
                                      ## 使用外部upscale类着色器时基本无需启用此项
#correct-downscaling=no               # [当 --dscale=bilinear 时此项无效] 增强缩小算法的质量，对于异形比例视频可能产生微小失真
                                      ## 可由更好的"SSimDownscaler.glsl"着色器替代
#linear-downscaling=no                # [使用"SSimDownscaler.glsl"时须关闭；须 --fbo-format 指定16位及以上的精度] （对HDR内容无影响）
                                      ## 上两项 --linear- 的参数对应MADVR中的"scale in linear light"，在缩小算法中线性处理可以提升颜色对比度的精确性
#scaler-resizes-only=yes              # 默认yes，当未进行缩放处理时，使用bilinear算法完美还原，禁用时，即使未改变大小，也使用指定的scale值进行处理，可以修正nnedi3和ravu引入的半像素偏移（但没必要）
#deband=no                            # 消去色带，无需常驻，可以选择视片源手动开启
#deband-iterations=1                  # <1-16> 去色带执行次数，越高强度但也越费时费力，数值>4实际无效（默认1），3-4相当于madvr的deband设为high的效果
#deband-threshold=64                  # <0-4096> 滤波器的截止阈值，更高的数字会增加强度，但会逐渐减少图像细节（默认32）
#deband-range=16                      # <1-64> 初始半径，越大的值去色带越强且性能占用越高；值越小越平滑（默认值16）。如果增大 --deband-iterations，需减小此值来进行补偿
#deband-grain=48                      # <0-4096> 添加额外动态噪点，有助于掩盖剩余的量化伪影（默认48）

########
# 音频 #
########

audio-device=auto                     # 此项用于指定启动时的音频输出设备
                                      # 改具体值示例 --audio-device="wasapi/{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"，设备名获取方式见发布页FAQ图文或官方手册
#audio-channels=stereo                # <默认值auto-safe|auto|layouts|stereo>，如果双声道系统播放多声道影片时有的声道声音没出现，尝试强制设定为双声道
                                      # 多声道音轨downmix成双声道时，如果觉得背景音过响，角色台词声音小，尝试看看这个：https://github.com/mpv-player/mpv/issues/6563 
ao=wasapi                             # --ao=<driver1,driver2,...[,]> 指定要使用的音频输出驱动程序的优先级列表，如果列表有尾随的 ','，mpv 将回退到未包含在列表中的驱动程序
                                      ## windows推荐wasapi；linux推荐alsa，需配合参数--audio-channels=auto；macos推荐coreaudio或coreaudio_exclusive
                                      ## 经测试如果有其他软件独占音频通道后再打开MPV画面会无比卡顿
#audio-exclusive=yes                  # 音频通道独占。如果音频存在卡顿问题可关闭这项或以上一项
#volume=100                           # 播放器启动音量。0为静音，默认100
volume-max=130                        # <100.0-1000.0> 最大音量。默认值130（130的响度约为100的两倍）
#audio-pitch-correction=yes           # [--af=scaletempo/scaletempo2/rubberband 的前置条件] 变速播放时的音调修正，默认开启。自动插入前三项音频滤镜中其一（更多信息见滤镜区）
#audio-delay=0.04                     # 如需要，可设置音频延迟
#audio-samplerate=96000               # 强制resample成96kHz，24bit（需要音频设备硬件支持）。注意！并非必要
#audio-format=s32
#audio-normalize-downmix=yes          # 规格化
audio-file-auto=fuzzy                 # <默认no|exact|fuzzy|all> 自动加载同名外挂音轨
audio-file-paths=audio;audios;**
                                      # <path1:path2:...> 在指定的额外目录中寻找匹配的音轨，支持相对和绝对路径
                                      ## ":" 在 windows上 使用 ";" 代替
                                      ## 可使用fuzzydir.lua增强路径配置，添加"**"可实现自动加载视频同目录下所有可匹配的子目录音轨
alang=jpn,ja,eng,en
                                      # 设置音轨首选语言，但MPV优先加载外挂轨道
#aid=1                                # 暂时无法根据其他的metadata选择轨道，mpv又默认偏好外挂轨道，常常选到不想要的音轨
                                      ## 建议使用trackselect.lua脚本实现依据metadata自动选择指定音轨 https://github.com/po5/trackselect

########
# 字幕 #
########

sub-font-provider=auto                        # <默认auto|none|fontconfig> 字体渲染api选项，win推荐使用auto，DirectWrite性能最佳，有字体包需求的可选择fontconfig
                                              # auto 自动选择系统字体渲染接口：Windows为DirectWrite，Linux为fontconfig，macOS为CoreText
                                              # none 忽略字幕指定字体，使用sub-font参数，字幕样式不变（对内挂字幕无效）
                                              # fontconfig 使用mpv.conf目录下fonts.conf里的字体加载项，可自定义fonts路径 <dir>CUSTOMFONTDIR</dir>
                                              # 使用自定义fonts路径时初次会将目录下所有字体写入内存，之后采用按需请求加载方式，加载相对auto稍慢，视需求选择
#sub-ass-override=no                          # <yes|默认no|force|scale|strip> 设置字幕渲染方式
sub-auto=fuzzy                                # <默认no|exact|fuzzy|all> 自动加载同名外挂字幕
sub-file-paths=sub;subs;subtitles;字幕;**              
                                              # <path1:path2:...> 在指定的额外目录中寻找匹配的字幕。支持相对和绝对路径，示例即自动搜索当前文件路径下名为"sub","subtitles","字幕"文件夹内
                                              ## ":" 在 windows上 使用 ";" 代替
                                              ## 可使用fuzzydir.lua增强路径配置，添加"**"可实现自动加载视频同目录下所有可匹配的子目录字幕
slang=chs,sc,cht,tc,chi,chinese,zh,zh-CN      
                                              # 设置字幕首选语言，但MPV优先加载外挂轨道
#sid=1                                        # 暂时无法根据其他的metadata选择轨道，mpv又默认偏好外挂轨道，常常选到不想要的字幕
                                              ## 建议使用sub-select.lua脚本实现依据metadata自动选择指定字幕 https://github.com/CogentRedTester/mpv-sub-select

blend-subtitles=no                            # <yes|video|默认no> 在插值和颜色管理之前，将字幕混合到视频帧上。值video类似于yes，但是以视频的原始分辨率绘制字幕，并与视频一起缩放
                                              # 启用此功能会将字幕限制在视频的可见部分（不能出现在视频下方的黑色空白处）
                                              # 还会让字幕受 --icc-profile，--target-prim，--target-trc，--interpolation，--gamma-factor 和 --glsl-shaders 的影响
                                              # 使用 --interpolation 时，配合合适的tscale算法，可提高字幕性能
sub-ass-force-margins=no                      # [当 --blend-subtitles=yes/video 时无效] 默认值为no，设为yes时，将使ass字幕尽可能输出在黑边上
stretch-image-subs-to-screen=yes              # 强制拉伸图形字幕到缩放分辨率而不是参考视频分辨率，可以使PGS实现输出在黑边的效果，可能破坏显示效果

# 字幕显示出来和xy-subfilter不一样？尝试启用下面的设置
#sub-ass-vsfilter-color-compat=basic          # <默认basic|full|force-601|no> 模仿(xy-)vsfilter行为转换字幕颜色空间
#sub-ass-vsfilter-blur-compat=no              # 通过视频分辨率而不是.ass指定的分辨率缩放"\blur"标签，默认开启， 关乎字幕模糊的设定
                                              ## 视频分辨率大于1080p时此选项可能导致"\blur"、"\border"、"\shadow"等ass标签缩放行为出现错误，可通过绑定快捷键切换开关状态
sub-ass-vsfilter-aspect-compat=no             # 播放非常规比例视频时拉伸ASS字幕来模仿传统的vsfilter行为，默认开启
sub-ass-force-style=ScaledBorderAndShadow=no  # 强制样式：不缩放边框和阴影。可防止所谓的“重墨”风格 https://github.com/libass/libass/issues/287
#sub-gauss=1.5                                # <0.0-3.0> 将高斯模糊应用于图像字幕（默认值：0）。这有助于使像素化 DVD/Vobsub 看起来更好
#sub-gray=yes                                 # 将图像字幕转换为灰度。可以帮助使黄色 DVD/Vobsubs 看起来更好


# 字幕设置，无内置风格时
sub-font="SourceHanSansSC-Bold"               # 指定纯文本字幕的字体，该参数本应对ASS字幕无效，实际影响了ASS的缺省默认字体 https://github.com/mpv-player/mpv/issues/8637
sub-font-size=50                              # 字体大小
sub-bold=yes                                  # 使用粗体样式
#sub-italic=yes                               # 使用斜体样式
sub-color="#FFFFFFFF"                         # 字幕主颜色
#sub-back-color="#FF262626"                   # 字幕背景颜色
sub-border-size=2                             # 字幕边框大小
sub-border-color="#FF262626"                  # 字幕边框颜色
sub-shadow-offset=0                           # 字幕阴影大小
sub-shadow-color="#33000000"                  # 字幕阴影颜色
sub-spacing=0.5                               # 字幕间距
sub-blur=1.5                                  # <0..20.0> 字幕边缘模糊度，推荐值1.5-3.0之间
sub-use-margins=yes                           # 是否使纯文本字幕输出在黑边上，默认yes

########
# 截图 #
########

### 以下预设参数只是为了截取最高质量的图片
screenshot-format=webp                        # <默认jpg|png|webp>
#screenshot-png-compression=7                 # <0-9> PNG压缩等级，过高的等级影响性能，默认为7
#screenshot-png-filter=5                      # 设置在PNG压缩之前应用的过滤器。0为无，1为sub，2为up，3为average，4为Paeth，5为mixed，这会影响可以达到的压缩级别。对于大多数图像，mixed可实现最佳压缩率，因此它是默认设置。
#screenshot-jpeg-quality=100                  # <0-100> JPEG的最高质量，默认为90
#screenshot-jpeg-source-chroma=yes            # 用与源视频相同的色度半采样写入JPEG，默认yes
screenshot-webp-lossless=yes                  # 无损WEBP，默认no
screenshot-webp-quality=100                   # 此项数值仅在 --screenshot-webp-lossless=no 时生效
screenshot-webp-compression=4                 # WEBP压缩等级，使用有损WEBP时进一步降低图片质量，默认为4 <0-6>
screenshot-tag-colorspace=yes                 # 使用适当的色彩空间标记屏幕截图（并非所有格式受支持）默认no
screenshot-high-bit-depth=yes                 # 主要影响PNG，尽可能使用和视频输出时相同的位深，默认yes
screenshot-template="~~/screen/%flies-%P-N%n"
#screenshot-directory=~~desktop/              # s键保存路径默认桌面

####################
# 脚本 滤镜 着色器 #
####################

gpu-shader-cache-dir="~~/shaders_cache"                                         # 在mpv.conf所在目录下建一个 shaders_cache 空文件夹，以存放编译好的GPU shaders，加速启动。
                                                                                # 注意！如果不放APPDATA下，确保该文件夹有用户写入权限。
                                                                                ## 缓存生成的着色器本应起到加速作用，但是硬盘IO性能不足可能产生反作用，根据实际情况选择禁不禁用
##⇘⇘脚本部分
##内置脚本开关（如果没有必要的目的，那就不要屏蔽mpv内建的功能）
#load-auto-profiles=no                                                          # <yes|no|默认auto> 新版条件配置（使用旧版外挂的用户记得禁用）
#load-osd-console=no                                                            # 控制台
#load-stats-overlay=no                                                          # 统计信息
#input-builtin-bindings=no                                                      # 在启动期间禁用 mpv 内置键位绑定的加载。此选项不会影响外部加载脚本的键位绑定
input-default-bindings=no                                                       # 禁用 mpv 内置键位及外部加载脚本的--mp.add_key_binding 键位绑定方案
                                                                                # 可以有效解决脚本快捷键冲突，启用后需在 input.conf 里指定所需快捷键
load-scripts=yes                                                                # 与osc=no一起使用，是缩略图脚本的必要前置条件
                                                                                # 自动挂载/scripts/目录中的所有脚本，默认yes。设置为no时可用下一行示例的命令加载指定脚本
#scripts="~~/scripts/autoload.lua;~~/scripts/playlistmanager.lua;~~/scripts/open-file-dialog.lua"
#ytdl=no                                                                        # 网址解析增强，默认启用
#ytdl-raw-options-append=cookies=[D:/cookies.txt]
                                                                                # [当 --ytdl=yes 时有效] 将自定义的选项传递给ytdl https://github.com/ytdl-org/youtube-dl#options
                                                                                # 示例仅为传递单个选项，多个选项最好独立追加，即写多个 --ytdl-raw-options-append 参数 https://mpv.io/manual/master/#options-ytdl-raw-options

##⇘⇘滤镜部分
## 设定随MPV启动的音/视频滤镜的书写格式（支持多项） --af/vf=滤镜①=参数❶=值:参数❷=值,滤镜②...
## --af 和 --vf 仅能各存在一条。如果不想只使用这条参数，可以拆开写，例如使用 --vf-toggle 单项多次追加更多的滤镜，并不会覆盖 --vf=<value> 指定的滤镜
## 同类别的滤镜算法互斥

af-toggle=lavfi=[loudnorm=I=-16:TP=-3:LRA=4]                                    # 多通道音轨调节各通道音，防止背景音或人声过小（双通道设备）
#af-toggle=lavfi=[dynaudnorm=g=5:f=250:r=0.9:p=0.5]
## 另一组示例
#af-add=@audnorm:!loudnorm=I=-25:TP=-1.5:LRA=1:linear=false
#af-add=@dynnorm:!dynaudnorm=f=500:g=17:r=0.1
#af-add=format:srate=48000

## 音频变速滤镜三选一（当前默认值已足够好）
#af=scaletempo=scale=1.0:stride=60:overlap=.20:search=14:speed=tempo
                                                                                # 旧版mpv使用的音频变速滤镜。示例值为默认参数
                                                                                # 其中的 scale=<N> 控制额外视频加速度；stride=<N> 值太高会导致在高速时跳音，低速出现回声，值太低会改变音调，值增大提升性能
                                                                                # overlap=<N> 重叠百分比，值减少提高分离度且提升性能；search=<N> 搜索最佳重叠位置的长度（毫秒），值减少提升性能
                                                                                # speed=<tempo|pitch|both|none> tempo节奏与速度同步，pitch造成卡顿不使用，both同时兼顾节奏与音调，none忽略速度变化不使用
#af=scaletempo2=min-speed=0.25:max-speed=4.0:search-interval=30:window-size=20  
                                                                                # 此项参数为变速播放时默认自动激活的音频滤镜。在 min/max-speed=<N> 此速度范围外直接静音处理。scaletempo2具有更高的音频质量
#af=rubberband                                                                  # 声音质量介于scaletempo和scaletempo2之间。可调节的细参众多，详情见官方文档，这里直接使用默认参数 

#vf-toggle=format:gamma=gamma2.2                                                # MPV校色曲线目标是BT.1886，此视频滤镜用于回归常见的显示器标准 https://github.com/mpv-player/mpv/issues/8009
#vf-toggle=fps=fps=60/1.001                                                     # 强制视频以指定帧率输出（此项与补帧冲突），通常被用于增强滚动弹幕的平滑性，不推荐使用 --sub-fps=<value> 。分子数值（取整）为你的显示器刷新率。

##⇘⇘着色器部分
### 着色器相关设置使用配置组进行设定，以下仅为参数示例说明，具体设置见下方 [通用参数补充区] 和 [配置组] 的相关配置组参数
## 此处的 --glsl-shaders=<value> 用于指定每次随MPV共同启动的着色器（支持多项）
## 初始加载多个着色器的示例写法
#glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"
#glsl-shaders="~~/shaders/Anime4K/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/Anime4K/Anime4K_Upscale_CNN_x2_S.glsl"

## --glsl-shaders-append 等效 --glsl-shader=<value> （注意和上行说明中参数的区别），表示追加着色器（单次仅能追加一项），并不会覆盖第一条 --glsl-shaders=<value> 指定的着色器，可无限追加该命令。
#glsl-shaders-append="~~/shaders/igv/KrigBilateral.glsl"                        # 高级的cscale色度升频算法，启用时将覆盖mpv指定的 --cscale=xxxxx 算法
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl"                   # 快速超分辨率卷积神经网络放大算法。最小缩放触发倍率为1.3，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl"           # 快速超分辨率卷积神经网络放大算法（anime）。最小缩放触发倍率为1.3，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1.glsl"                  # 快速超分辨率卷积神经网络放大算法。16x效果更好，耗能也更高。最小缩放触发倍率为1.3，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl"          # 快速超分辨率卷积神经网络放大算法。去伪影变体，最小缩放触发倍率为1.3，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/igv/FSRCNNX_x2_16-0-4-1_anime_enhance.glsl"    # 快速超分辨率卷积神经网络放大算法。anime去伪影变体，最小缩放触发倍率为1.3，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/nnedi3/nnedi3-nns16-win8x4.glsl"               # 超高质量的插值放大算法。耗能极高，nns16 → nns32 → nns64 → nns128 → nns256；win8x4 → win8x6 质量更好但性能大增
#glsl-shaders-append="~~/shaders/ravu/ravu-zoom-r4.glsl"                        # ravu放大算法zoom变体，通用型，触发倍率＞1，放大到目标分辨率，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/ravu/ravu-lite-r4.glsl"                        # ravu放大算法lite变体，通用型，最小缩放触发倍率约为1.414，最锐利的变体，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/ravu/ravu-r4.glsl"                             # ravu放大算法r变体，动画型，最小缩放触发倍率约为1.414，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/ravu/ravu-3x-r4.glsl"                          # ravu放大算法3x变体，动画型，最小缩放触发倍率约为2.121，直接放大三倍，适用于超低清源，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/ACNet/ACNet.glsl"                              # ACNet放大算法，观感类似Anime4k， 最小缩放触发倍率为1.2，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/ACNet/ACNet_HDN_L1.glsl"                       # ACNet放大算法HDN变体，能更好的降噪，等级1→2→3，越高降噪效果越好，但可能导致模糊和缺少细节，生效时将覆盖指定的--scale=xxxxx 算法
#glsl-shaders-append="~~/shaders/Anime4K/Anime4K_Restore_CNN_M.glsl" 
                                                                                # Anime4k放大算法模块（适度画面修复+弱感知强化+微量伪影引入），CNN变体最小缩放触发倍率为1.2，推荐 Restore_CNN_Soft 抗锯齿柔化变体，减少了振铃等其他伪影的产生
                                                                                # Anime4k着色器介绍及用法参考：https://hooke007.github.io/mpv-lazy/[01]_%E7%AC%AC%E4%B8%89%E6%96%B9%E7%9D%80%E8%89%B2%E5%99%A8%E4%BB%8B%E7%BB%8D.html
#glsl-shaders-append="~~/shaders/igv/SSimSuperRes.glsl"                         # 对mpv的内置 --scale=xxxxx 放大算法进行校正（消除振铃伪影，恢复原始清晰度等）
#glsl-shaders-append="~~/shaders/igv/SSimDownscaler.glsl"                       # 缩小算法增强，与--dscale=mitchell 和--linear-downscaling=no 一起使用
#glsl-shaders-append="~~/shaders/igv/adaptive-sharpen.glsl"                     # 自适应锐化算法，更适用于Anime，与--sigmoid-upscaling=no 一起使用
#glsl-shaders-append="~~/shaders/igv/adaptive-sharpen_2_0_anime.glsl"           # 自适应锐化算法，Anime增强变体，与--sigmoid-upscaling=no 一起使用

##################
# 通用参数补充区 #
##################

#d3d11-output-csp=pq                          # [须 --gpu-api=d3d11] 此项参数用于直出HDR，且不支持条件配置会影响sdr播放。
                                              # 当前版本需先手动打开win10 OS HDR，再打开MPV后全屏开始播放
#include="~~/profiles.conf"                   # 该参数用于追加读取额外的设置文件
                                              # 以下配置组参数亦可单独放入"~~/profiles.conf"中，启用该参数时效果一致

##⇘⇘以下为常规配置组启用参数，视需求选择使用
#profile=ICC                                  # icc色彩管理配置组，由操作系统的显示设置指定的 ICC 显示配置文件
profile=ICC+                                  # icc色彩管理配置组，使用 color.org 提供的泛icc配置文件或专业校色文件，自行选择显示器对应色域的icc配置文件
#profile=Target                               # target色彩管理配置组，不可与icc色彩管理共存
profile=Tscale                                # [启用前须先注释 --tscale=<value>] 时间插值算法，具体参数见下方配置区的同名配置
#profile=Tscale-box                           # [启用前须先注释 --tscale=<value>] 备选的时间插值算法，具体参数见下方配置区的同名配置
profile=Dither                                # 抖动算法配置组（ordered），效果接近error-diffusion，耗能较低
#profile=Dither+                              # 抖动算法配置组（error-diffusion），效果最好也最耗能
profile=HQ                                    # 最常用的内置算法配置组
profile=DeBand-low                            # [启用前需先注释 --deband] 预设的去色带方案，具体参数见下方配置区的同名配置，接近madvr的deband设为low，使用low时已有很好的效果
#profile=DeBand-medium                        # [启用前需先注释 --deband] 备选的去色带方案，具体参数见下方配置区的同名配置，接近madvr的deband设为medium
#profile=DeBand-high                          # [启用前需先注释 --deband] 备选的去色带方案，具体参数见下方配置区的同名配置，接近madvr的deband设为high

## 以下为着色器配置组，可按需启用以下所需任一配置组（这将覆盖上面的--glsl-shaders-append参数）
profile=NNEDI3                                # 适用于大多数场景（NNEDI3-16）               ## 绝大多数场景表现良好，对场景的适应性优于FSRCNNX配置（抑制锯齿和振铃伪影）。喜欢通用性的优先使用此配置组
#profile=NNEDI3+                              # 适用于低解析场景（NNEDI3-32）               ## 理论上NNEDI3-32及64有更好地抑制振铃伪影效果，但耗能量级倍增，视设备性能自行选择是否使用
#profile=Normal                               # 适用于大多数场景（FSRCNNX）                 ## 效果类似madvr的NGU Sharp，但产生更多振铃伪影
#profile=Normal+                              # 适用于低解析场景（FSRCNNX_enhance）         ## 对实拍类图像具有极好的抑制振铃伪影效果
#profile=Anime                                # 适用于大多数动画（FSRCNNX_LineArt）         ## 效果类似madvr的NGU AA，但产生更多振铃伪影
#profile=Anime+                               # 适用于低解析动画（FSRCNNX_anime_enhance）   ## 对anime类图像具有极好的抑制振铃伪影效果
#profile=Anime-ravu-3x                        # 适用于低解析动画（ravu-3x）                 ## 效果类似madvr的NGU AA，更适合anime
#profile=ACNet                                # 适用于低解析动画（ACNet）
#profile=ACNet+                               # 适用于低解析动画（ACNet降噪方案）
#profile=Anime4K                              # 适用于大多数动画（Anime4k去伪影抗锯齿）
#profile=Anime4K+                             # 适用于低解析动画（纯Anime4k方案）
#profile=4K-SSSR                              # 适用于4k低性能

##############
# 常规配置组 #
##############
##⇘⇘常规配置没有自动触发条件（内置配置组也全为常规配置）
##需要主设置文件中使用 --profile=<profile1,profile2,...> 或多行 --profile=<xxx> 参数激活数个配置

[ICC]
 icc-profile-auto
 icc-intent=0
 icc-force-contrast=1000
 icc-3dlut-size=64x64x64
 icc-cache-dir="~~/icc_cache"

[ICC+]
 icc-profile="~~/icc/ITU-RBT709ReferenceDisplay.icc"
 icc-intent=0
 icc-3dlut-size=64x64x64
 icc-cache-dir="~~/icc_cache"

[Target]
 target-prim=auto
 target-trc=auto
 target-peak=auto
 gamut-clipping=no

[Tscale]
 video-sync=display-resample
 video-sync-max-video-change=5
 interpolation
 tscale=oversample

[Tscale-box]
## 这组时间插值方案参数来自开源社区，顺滑但不一定适合所有源 https://github.com/mpv-player/mpv/issues/2685
 video-sync=display-resample
 video-sync-max-video-change=5
 interpolation
 tscale=box
 tscale-window=quadric                        # 或者 sphinx
 tscale-radius=1.0                            # 较高值更顺滑但也更糊，例 1.01，其他可测试值:1.025,1.1
 tscale-clamp=0.0

[Dither]
 dither-depth=auto
 dither=ordered
 temporal-dither
 temporal-dither-period=1

[Dither+]
 dither-depth=auto
 dither=error-diffusion
 dither-size-fruit=6
 error-diffusion=sierra-lite
 temporal-dither
 temporal-dither-period=1

[HQ]
 scale=ewa_hanning
 cscale=ewa_hanning
 dscale=mitchell
 linear-upscaling=no
 sigmoid-upscaling=no
 correct-downscaling=no
 linear-downscaling=no
 scaler-resizes-only=yes
 deband=no

[DeBand-low]
 profile-desc=DeBand low
 deband
 deband-iterations=1
 deband-threshold=64
 deband-range=16
 deband-grain=48

[DeBand-medium]
 profile-desc=deband medium
 deband
 deband-iterations=2
 deband-threshold=64
 deband-range=16
 deband-grain=48

[DeBand-high]
 profile-desc=deband high
 deband
 deband-iterations=3
 deband-threshold=64
 deband-range=16
 deband-grain=48

[NNEDI3]
 profile-desc=适用于大多数场景
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/nnedi3/nnedi3-nns16-win8x4.glsl;~~/shaders/ravu/ravu-lite-r4.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[NNEDI3+]
 profile-desc=适用于低解析场景
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/nnedi3/nnedi3-nns32-win8x4.glsl;~~/shaders/ravu/ravu-lite-r4.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Normal]
 profile-desc=适用于大多数场景
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/ravu/ravu-lite-r4.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Normal+]
 profile-desc=适用于低解析场景
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_16-0-4-1_enhance.glsl;~~/shaders/ravu/ravu-lite-r4.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime]
 profile-desc=适用于大多数动画
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/ravu/ravu-r4.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime+]
 profile-desc=适用于低解析动画
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_16-0-4-1_anime_enhance.glsl;~~/shaders/ravu/ravu-r4.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime-ravu-3x]
 profile-desc=适用于低解析动画
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/ravu/ravu-3x-r4.glsl;~~/shaders/ravu/ravu-r4.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ACNet]
 profile-desc=ACNet
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/ACNet/ACNet.glsl;~~/shaders/ACNet/ACNet.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[ACNet+]
 profile-desc=ACNet降噪
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/ACNet/ACNet_HDN_L1.glsl;~~/shaders/ACNet/ACNet.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime4K]
 profile-desc=Anime4K
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/Anime4K/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K/Anime4K_Restore_CNN_Soft_M.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Anime4K+]
 profile-desc=Anime4K+
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/Anime4K/Anime4K_Clamp_Highlights.glsl;~~/shaders/Anime4K/Anime4K_Restore_CNN_M.glsl;~~/shaders/Anime4K/Anime4K_Upscale_CNN_x2_S.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[4K-SSSR]
 profile-desc=适用于4k低性能
 dscale=mitchell
 linear-downscaling=no
 sigmoid-upscaling=no
 glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

##############
# 条件配置组 #
##############
##⇘⇘条件触发配置，根据给定条件激发特定参数。简易格式见示例
##仅注释掉 --profile-cond 和 --profile-restore 即可将条件配置变为常规配置，常规配置的使用方法为通用区 --profile=<value>

##⇘⇘条件配置的格式示例
##[FS-loop]                                                  # 配置名称，自定义
##profile-desc    = 全屏时循环播放当前文件                   # 配置的描述，不属于参数，随意写
##profile-cond    = fullscreen                               # 触发该配置的条件。可用的属性列表 https://mpv.io/manual/master/#property-list
##profile-restore = copy                                     # 此参数一般用于回归触发前的通用参数（关闭此项将保留）
##...                                                        # 然后写该条件下触发的参数
##...

#[VCB-Studio]
## 字符串匹配的示例写法。根据文件名中的特定字符触发的配置
## 不熟悉Lua语法的话尽量写纯数字英文或者使用叠加法达成近似效果，例：string.match(p.filename, "(VCB)")~=nil and string.match(p.filename, "(Studio)")~=nil
#profile-desc=真空断路器
#profile-cond=string.match(p.filename, "(VCB%-Studio)")~=nil
#profile-restore=copy
#deband=no

#[DVD-Anime]
#profile-desc=2D低清源增强
#profile-cond=height<=576
#profile-restore=copy
#glsl-shaders="~~/shaders/igv/KrigBilateral.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/FSRCNNX_x2_8-0-4-1_LineArt.glsl;~~/shaders/igv/SSimSuperRes.glsl;~~/shaders/igv/SSimDownscaler.glsl"

[Deband-]
 profile-desc=YUV420P10及以上的源关闭去色带
 profile-cond=p["video-params/average-bpp"]>=24
 profile-restore=copy
 deband=no

[HDR2SDR]
 profile-desc=HDR映射
 profile-cond=p["video-params/gamma"] == "pq" or p["video-params/gamma"] == "hlg"
 profile-restore=copy
 #icc-profile="~~/icc/ITU-RBT709ReferenceDisplay.icc"        # 使用icc色彩管理时可避免hdr下mpv默认--gamut-clipping 参数导致的色度偏移
 #icc-profile-auto                                           # 使用icc色彩管理时可避免hdr下mpv默认--gamut-clipping 参数导致的色度偏移
 #target-peak=100                                            # <10-10000> （默认auto即203）该数值越低，画面整体越亮，根据屏幕实际nits值和显示效果调整
                                                             # 使用--icc-profile-auto或--target-prim参数管理色彩空间时，可适当调低此值以提升暗部画面细节，注意尽可能避免画面过曝
                                                             # 使用外部校色文件管理色彩空间时，推荐使用默认值或屏幕实际nits值，避免画面过曝
 tone-mapping=hable                                          # 色调映射算法，其他推荐能用的有clip/reinhard/hable/gamma，默认 bt.2390。推荐使用mobius或hable，hable大致相当于 --tone-mapping=reinhard  --tone-mapping-param=0.24
 #tone-mapping-param=0.3                                     # 色调映射算法的小参，bt.2390和hable无参。mobius默认0.3/reinhard默认0.5/gamma默认1.8
 hdr-compute-peak=yes                                        # <默认auto|yes|no> 此选项基本上提供了动态的基于场景的色调映射（较老的显卡不支持此参数，此时画面将变得惨白）
 hdr-peak-decay-rate=100                                     # [当 --hdr-compute-peak=yes 时生效] ，用于 HDR 峰值检测算法的衰变率（<1.0.1000.0>默认值：100.0）
 hdr-scene-threshold-low=5.5                                 # [当 --hdr-compute-peak=yes 时生效] ，亮度差异的下阈值（dB）将被视为场景更改（<0.0.100.0>默认值：5.5）
 hdr-scene-threshold-high=10                                 # [当 --hdr-compute-peak=yes 时生效] ，亮度差异的上阈值（dB）将被视为场景更改（<0.0.100.0>默认值：10.0）
 #gamut-warning                                              # 配合--tone-mapping=clip 和 --target-prim 参数使用，启用时mpv将标记所有超出给定阈值的剪裁/出域像素（当前硬编码为 101%）。受影响的像素将被处理并更加突显（icc色彩管理下该参数无效）
 gamut-clipping=no                                           # 通过降低色域外颜色的饱和度，进行色度裁剪。此处关闭以避免色度偏移（icc色彩管理下该参数无效） https://github.com/mpv-player/mpv/issues/9071
 tone-mapping-max-boost=1.33                                 # <1.0-10.0> 平均亮度的最大曝光倍数，默认：1.0。增大此值可显示暗处隐藏的细节，过高会使暗处看起来不自然地明亮
 tone-mapping-desaturate=0.66                                # <0.0-1.0> （默认0.75）高光去饱和度，可以尝试0.66或0.9下的表现
 tone-mapping-desaturate-exponent=0.22                       # <0.0-20.0> （默认1.5）去饱和指数，可以尝试0或0.22下的表现
 blend-subtitles=no                                          # 问题状态 https://github.com/mpv-player/mpv/issues/6368 （静态映射不受影响）
 sub-ass-force-margins=no
 deband=no
 vf=""                                                       # 此项用于清空vf列表恢复合理的HDR播放效果（如果启用 --vf=format:gamma=gamma2.2 的话会影响hdr的显示）

[rot-fix]
 profile-desc=修复旋转输出的色度破坏                         # 问题状态 https://github.com/mpv-player/mpv/issues/8223
 profile-cond=p["video-params/rotate"]==90 or p["video-params/rotate"]==270
 profile-restore=copy
 hwdec=no

[deinterlace]
 profile-desc=自动去交错
 profile-cond=deinterlace or (p["video-frame-info/interlaced"] and not deinterlace)
 profile-restore=copy
 deinterlace

[fullscreen]
 profile-desc=全屏自动置顶
 profile-cond=fullscreen
 profile-restore=copy
 ontop

[minimized]
 profile-desc=最小化时暂停
 profile-cond=window_minimized
 profile-restore=copy-equal
 pause

[end]
 profile-desc=播放列表结束后退出全屏
 profile-cond=eof_reached
 no-fullscreen
 no-window-maximized

#[image]
# profile-desc=图像
# profile-cond=vid and not p["current-tracks/video/albumart"] and estimated_frame_count <= 1
# profile-restore=copy
# prefetch-playlist
# image-display-duration=inf
# scale=ewa_hanning
# cscale=ewa_hanning
# dscale=mitchell

#[audio]
# profile-desc=音乐
# profile-cond=aid and (not vid or p["current-tracks/video/albumart"])
# profile-restore=copy
# prefetch-playlist
# loop-playlist=inf

##############
# 传统配置组 #
##############
##⇘⇘ Legacy auto profiles 根据扩展名自动切换到符合的配置。语法见示例

##⇘⇘传统自动配置的格式示例
##[extension.扩展名]
##不要写 --profile-cond 和 --profile-restore
##... # 直接写参数即可


#[extension.vpy]
#profile-desc        = 支持 "xxxx.vpy" 文件的预览
#demuxer-lavf-format = vapoursynth